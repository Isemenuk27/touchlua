-- /-/&|_£() \/\/∅I2|_])

local separator = "  "

local leet = {
    a = { "4", "@" },
    b = { "I3", "8", "13", "|3" },
    c = { "(", "[", "©", "¢" },
    d = { "])", "|)", "I)" },
    e = { "€", "&" },
    f = { "|=", "I=" },
    g = { "9", "(_+" },
    h = { "|-|", "/-/", "I+I" },
    i = { "1", "!" },
    j = { "_]", "_)" },
    k = { "|{", "|c", "]{" },
    l = { "|_", "£" },
    m = { "(\\/)", "^^", "/\\/\\" },
    n = { "/\\/", "/V" },
    o = { "()", "∅" },
    p = { "|⁰", "|9" },
    q = { "O_", "()_" },
    r = { "I2", "|2" },
    s = { "5", "$" },
    t = { "1", "'|'"},
    u = { "μ", "|_|", "(_)" },
    v = { "\\/", "√" },
    w = { "\\/\\/", "VV" },
    x = { "}{", ")(", "%" },
    y = { "\\|", "`/" },
    z = { "2", "`/_", "7_" },

    ["й"] = { "\\'/\\", "]`/[" },
    ["ц"] = { "|]‚", "[|," },
    ["у"] = { "`/", "\\/" },
    ["к"] = { "|{", "|c", "]{" },
    ["е"] = { "[-", "£" },
    ["н"] = { "]-[", "|-|" },
    ["г"] = { "|`", "/'" },
    ["ш"] = { "[_|_]", "|_|_|" },
    ["щ"] = { "|_|_|_‚", "[_|_]_," },
    ["з"] = { "3", "3" },
    ["х"] = { "}{", ")(" },
    ["ї"] = { '"|"', "`|`" },
    ["ф"] = { "%", "%" },
    ["і"] = { "!", "|" },
    ["в"] = { "I3", "|3" },
    ["а"] = { "4", "@" },
    ["п"] = { "|'|", "|`|" },
    ["р"] = { "I°", "|°" },
    ["о"] = { "()", "[]" },
    ["л"] = { "/|", "]|" },
    ["д"] = { "/=\\", "/^-\\" },
    ["ж"] = { "}|{", "}|{" },
    ["є"] = { "(-", "€" },
    ["я"] = { "9|", "2|" },
    ["ч"] = { "(|", "'-|" },
    ["с"] = { "(", "[" },
    ["м"] = { "|\\/|", "]\\/[" },
    ["и"] = { "|/|", "\\/\\" },
    ["т"] = { "'|'", "1" },
    ["ь"] = { "|‚", "|›" },
    ["б"] = { "6", "|5" },
    ["ю"] = { "|{)", "|~()" },
    ["ґ"] = { "|`/", "|√" },
}

::start::

local text = tostring( io.read() ) or "nil"
local newtext = ""
local lastletter = {}

local function rand( letter )
    local t = leet[letter]
    local newletter

    repeat
        newletter = t[math.random( 1, #t )]
    until newletter ~= lastletter[letter]

    lastletter[letter] = newletter
    return newletter
end

for _, codepoint in utf8.codes(text) do
    local letter = utf8.char(codepoint)

    letter = string.lower( letter )

    if ( leet[letter] ) then
        letter = rand( letter )
    end

    newtext = newtext .. letter .. separator
end

print( newtext, "\n" )

goto start
